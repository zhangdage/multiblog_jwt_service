<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangshi.multiblog.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.zhangshi.multiblog.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="userface" jdbcType="VARCHAR" property="userface" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
  </resultMap>

  <!--查询的时候将角色列表一起查询出来-->
  <resultMap id="ResultMap" type="com.zhangshi.multiblog.entity.User"
             extends="BaseResultMap">
    <collection property="roles" ofType="com.zhangshi.multiblog.entity.Role">
      <id column="role_id" jdbcType="INTEGER" property="id" />
      <result column="role_name" jdbcType="VARCHAR" property="roleName" />
      <result column="role_no" jdbcType="VARCHAR" property="roleNo" />
    </collection>
  </resultMap>

  <resultMap id="totalResultMap" type="com.zhangshi.multiblog.entity.User"
             extends="BaseResultMap">
    <collection property="roles" ofType="com.zhangshi.multiblog.entity.Role">
      <id column="role_id" jdbcType="INTEGER" property="id" />
      <result column="role_name" jdbcType="VARCHAR" property="roleName" />
      <result column="role_no" jdbcType="VARCHAR" property="roleNo" />
      <collection property="permissions" column="role_permission_id" ofType="com.zhangshi.multiblog.entity.Permission"
                  select="com.zhangshi.multiblog.mapper.PermissionMapper.getPermissionByRoleId" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, user_no, password, `name`, phone, address, telephone,userface,enabled,remark
  </sql>
  <!-- 通过用户名的查找基本 -->
  <select id="baseGetUserByName" resultMap="BaseResultMap" >
    SELECT
    <include refid="Base_Column_List"/>
    FROM user
    WHERE user_name=#{0}
  </select>
  <!-- 通过用户名的查找、包括对应的角色信息 -->
  <select id="getUserByName" resultMap="ResultMap">
    SELECT
     u.id, u.user_name, u.user_no, u.password, `name`, phone, address, telephone,userface,enabled,remark,

    r.id as role_id, r.role_name, r.role_no

    FROM
    user u LEFT JOIN user_role ur
    ON  u.id = ur.user_id
    LEFT  JOIN role r
    ON  ur.role_id = r.id
    WHERE u.user_name = #{0}

  </select>

  <select id="getUser" resultMap="totalResultMap">
    SELECT
   u.id, u.user_name, u.user_no, u.password, `name`, phone, address, telephone,userface,enabled,remark,

    r.id as role_id, r.role_name, r.role_no,r.id as role_permission_id

    FROM
    user u LEFT JOIN user_role ur
    ON  u.id = ur.user_id
    LEFT  JOIN role r
    ON  ur.role_id = r.id
    WHERE u.user_name = #{0}

  </select>



  <select id="selectByExample" parameterType="com.zhangshi.multiblog.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhangshi.multiblog.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhangshi.multiblog.entity.User">
    insert into user (id, user_name, user_no, 
      password)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userNo,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhangshi.multiblog.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhangshi.multiblog.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhangshi.multiblog.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhangshi.multiblog.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>